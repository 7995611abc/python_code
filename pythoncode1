import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt 

# Read the dataset into a Pandas dataframe
df = pd.read_csv("Dataset1.csv")
df.columns = ["Country Name", "Country Code", "Indicator Name", "Indicator Code","1971","1972",	"1973",	"1974",	"1975",	"1976",	"1977",	"1978",	"1979",	"1980", "1981",	"1982",	"1983",	"1984",	"1985",	"1986",	"1987",	"1988",	"1989",	"1990",	"1991",	"1992",	"1993",	"1994",	"1995",	"1996",	"1997",	"1998",	"1999",	"2000",	"2001",	"2002",	"2003",	"2004",	"2005",	"2006",	"2007",	"2008",	"2009",	"2010",	"2011",	"2012",	"2013",	"2014", "2015",	"2016",	"2017",	"2018",	"2019",	"2020",	"2021"]

def Data():
    
    # Read the dataset into a Pandas dataframe
    df = pd.read_csv("Dataset1.csv")
    df.columns = ["Country Name", "Country Code", "Indicator Name", "Indicator Code","1971",	"1972",	"1973",	"1974",	"1975",	"1976",	"1977",	"1978",	"1979",	"1980", "1981",	"1982",	"1983",	"1984",	"1985",	"1986",	"1987",	"1988",	"1989",	"1990",	"1991",	"1992",	"1993",	"1994",	"1995",	"1996",	"1997",	"1998",	"1999",	"2000",	"2001",	"2002",	"2003",	"2004",	"2005",	"2006",	"2007",	"2008",	"2009",	"2010",	"2011",	"2012",	"2013",	"2014", "2015",	"2016",	"2017",	"2018",	"2019",	"2020",	"2021"]
    
    # Line Plot
    df.plot(x="Country Name", legend=True,y=["1971",	"1972",	"1973",	"1974",	"1975",	"1976",	"1977",	"1978",	"1979",	"1980", "1981",	"1982",	"1983",	"1984",	"1985",	"1986",	"1987",	"1988",	"1989",	"1990",	"1991",	"1992",	"1993",	"1994",	"1995",	"1996",	"1997",	"1998",	"1999",	"2000",	"2001",	"2002",	"2003",	"2004",	"2005",	"2006",	"2007",	"2008",	"2009",	"2010",	"2011",	"2012",	"2013",	"2014", "2015",	"2016",	"2017",	"2018",	"2019",	"2020",	"2021"])
    plt.title("Climate Change yearwise ")
    plt.xlabel("Countries")
    plt.xticks(rotation = 90)
    plt.ylabel("Climate Change")
    plt.savefig("Climate CHange")
    plt.figure(figsize=(25, 5))
    plt.show()
    
    # Use the melt function to transform the dataframe
    df_melted = pd.melt(df, id_vars=['Country Name', 'Indicator Name'], var_name='Year', value_name='Value')
    
    # Separate the melted dataframe into two dataframes: one with years as columns and one with countries as columns
    df_by_year = df_melted.set_index(['Country Name', 'Indicator Name', 'Year']).apply(pd.to_numeric, errors='coerce')
    df_by_country = df_melted.set_index(['Indicator Name', 'Country Name', 'Year']).apply(pd.to_numeric, errors='coerce')

# Transpose the dataframes
    df_by_year_transposed = df_by_year.transpose()
    df_by_country_transposed = df_by_country.transpose()
    
    # Line Plot for IND
    india_data = df_by_year.loc['India']
    india_data.plot()
    plt.title("Climate Change Trends in IND")
    plt.xlabel("Year")
    plt.xticks(rotation = 90)
    plt.ylabel("Value")
    plt.savefig("Ind.jpg")
    plt.show()

    # Line Plot for UK
    india_data = df_by_year.loc['United Kingdom']
    india_data.plot()
    plt.title("Climate Change Trends in UK")
    plt.xlabel("Year")
    plt.xticks(rotation = 90)
    plt.ylabel("Value")
    plt.savefig("UK.jpg")
    plt.show()

    # Line Plot for US
    india_data = df_by_year.loc['United States']
    india_data.plot()
    plt.title("Climate Change Trends in US")
    plt.xlabel("Year")
    plt.xticks(rotation = 90)
    plt.ylabel("Value")
    plt.savefig("US.jpg")
    plt.show()

    return df_by_year, df_by_country
# Example usage of the function to read and transform the dataset
df_by_year, df_by_country = Data()

def describe_data(df_by_country, indicator):
    """
    Provide summary statistics for a specific indicator in the df_by_country dataframe.

    Parameters:
    - df_by_country: Pandas DataFrame
    - indicator: str, the indicator for which you want to see the summary statistics
    """
    indicator_data = df_by_country.loc[indicator]
    print(f"Summary Statistics for {indicator}:\n")
    print(indicator_data.describe())

# Perform basic analysis on the dataframe
print(df_by_country.loc['Population growth (annual %)'].describe())
print(df_by_country.loc['Energy use (kg of oil equivalent per capita)'].describe())

# Calculate correlation between two indicators
population_growth = df_by_country.loc['Population growth (annual %)', :, :]
energy_use = df_by_country.loc['Energy use (kg of oil equivalent per capita)', :, :]
corr = population_growth['Value'].corr(energy_use['Value'])

# Scatter Plot
plt.scatter(population_growth['Value'], energy_use['Value'])
plt.title("Correlation between Population growth and Energy use")
plt.xlabel("Population growth")
plt.ylabel("Energy use")
plt.savefig("scatter Plot")
plt.xticks(rotation = 90)
plt.show()

# Heatmap
fig, ax = plt.subplots(figsize=(10, 6))
corr_matrix = df_by_country.corr()
sns.heatmap(corr_matrix, annot=True, cmap='YlGnBu', annot_kws={'fontsize': 10}, ax=ax)
plt.title("Correlation Between Indicators")
plt.xlabel("Indicator")
plt.xticks(rotation = 90)
plt.ylabel("Country")
plt.show()
plt.savefig('Climate_change by country')
print(f" Population growth and Energy use Comparison: {corr}")
